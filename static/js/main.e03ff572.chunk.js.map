{"version":3,"sources":["App.js","index.js"],"names":["App","useState","list","setList","showData","setshowData","searchValue","setSearchValue","view","setView","console","log","address","getApi","a","fetch","Api","json","listview","elem","getUser","useEffect","style","display","width","marginLeft","className","color","type","placeholder","value","onChange","event","target","border","scope","filter","user1","title","toLowerCase","includes","map","ce","id","completed","backgroundColor","onClick","name","username","email","street","city","zipcode","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sKA4HeA,EA1HH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACAC,QAAQC,IAAI,OAAQH,EAAKI,SAEzB,IAAMC,EAAM,uCAAG,4BAAAC,EAAA,sEACGC,MAAM,8CADT,cACTC,EADS,YAEbb,EAFa,SAECa,EAAIC,OAFL,6EAAH,qDAKNC,EAAQ,uCAAG,WAAOC,GAAP,eAAAL,EAAA,sEACKC,MAAM,8CAAD,OACuBI,IAFjC,cACXC,EADW,YAIfX,EAJe,SAIDW,EAAQH,OAJP,kCAKfZ,GAAY,GALG,2CAAH,sDAiCd,OAJAgB,qBAAU,WACRR,MACC,IAGD,mCACE,sBAAKS,MAAO,CAAEC,QAAS,QAAvB,UACE,sBAAKD,MAAO,CAAEE,MAAO,MAAOC,WAAY,QAAxC,UACE,qBAAKC,UAAU,8BAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeJ,MAAO,CAAEK,MAAO,SAA5C,mBAGA,sBAAMD,UAAU,SAAhB,SACE,uBACEA,UAAU,oBACVE,KAAK,SACLC,YAAY,mBACZ,aAAW,SACXC,MAAOxB,EACPyB,SAAU,SAACC,GACTzB,EAAeyB,EAAMC,OAAOH,iBAMtC,wBACEJ,UAAU,oBACVJ,MAAO,CAAEY,OAAQ,kBAAmBV,MAAO,QAF7C,UAIE,gCACE,+BACE,oBAAIW,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,yBAGJ,gCACGjC,EACEkC,QAAO,SAACC,GACP,MAAoB,KAAhB/B,GAGF+B,EAAMC,MACHC,cACAC,SAASlC,EAAYiC,eAJjBF,OACF,KAQRI,KAAI,SAACC,GACJ,OACE,+BACE,oBAAIP,MAAM,MAAV,SAAiBO,EAAGC,KACpB,6BAAKD,EAAGJ,QACR,6BAAqB,GAAhBI,EAAGE,UAAoB,OAAS,UACrC,+BACG,IACD,wBACElB,UAAU,kBACVJ,MAAO,CAAEE,MAAO,MAAOqB,gBAAiB,SACxCC,QAAS,kBApFf3B,EAoF8BuB,EAAGC,QAlFjDzB,EAASC,GAFM,IAACA,GAiFI,wCAchB,8BAAMf,EAAW,sDAxFnB,mCACE,sBAAKsB,UAAU,YAAf,UACE,sCAASlB,EAAKmC,MACd,wCAAWnC,EAAKuC,QAChB,2CAAcvC,EAAKwC,YACnB,wCAAWxC,EAAKyC,SAEhB,0CAAazC,EAAKI,QAAQsC,UAC1B,uCAAU1C,EAAKI,QAAQuC,QACvB,0CAAa3C,EAAKI,QAAQwC,kBA+EsC,UCjHpEC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.e03ff572.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nconst App = () => {\n  const [list, setList] = useState([]);\n  const [showData, setshowData] = useState(true);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const [view, setView] = useState([]);\n  console.log(\"view\", view.address);\n\n  const getApi = async () => {\n    let Api = await fetch(\"https://jsonplaceholder.typicode.com/todos\");\n    setList(await Api.json());\n  };\n\n  const listview = async (elem) => {\n    let getUser = await fetch(\n      `https://jsonplaceholder.typicode.com/users/${elem}`\n    );\n    setView(await getUser.json());\n    setshowData(false);\n  };\n\n  const userView = (elem) => {\n    // alert(elem);\n    listview(elem);\n  };\n\n  const showdata = () => {\n    return (\n      <>\n        <div className=\"container\">\n          <p> ID: {view.id}</p>\n          <p> Name: {view.name}</p>\n          <p>UserName: {view.username}</p>\n          <p>Email: {view.email}</p>\n\n          <p>address: {view.address.street}</p>\n          <p>city :{view.address.city}</p>\n          <p>zipcode :{view.address.zipcode}</p>\n        </div>\n      </>\n    );\n  };\n  useEffect(() => {\n    getApi();\n  }, []);\n\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <div style={{ width: \"70%\", marginLeft: \"20px\" }}>\n          <nav className=\"navbar navbar-light bg-dark\">\n            <div className=\"container-fluid\">\n              <a className=\"navbar-brand\" style={{ color: \"white\" }}>\n                Todos\n              </a>\n              <form className=\"d-flex\">\n                <input\n                  className=\"form-control me-2\"\n                  type=\"search\"\n                  placeholder=\" Search by Title\"\n                  aria-label=\"Search\"\n                  value={searchValue}\n                  onChange={(event) => {\n                    setSearchValue(event.target.value);\n                  }}\n                />\n              </form>\n            </div>\n          </nav>\n          <table\n            className=\"table caption-top\"\n            style={{ border: \"1px solid black\", width: \"100%\" }}\n          >\n            <thead>\n              <tr>\n                <th scope=\"col\">ToDo ID</th>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {list\n                .filter((user1) => {\n                  if (searchValue === \"\") {\n                    return user1;\n                  } else if (\n                    user1.title\n                      .toLowerCase()\n                      .includes(searchValue.toLowerCase())\n                  ) {\n                    return user1;\n                  }\n                })\n                .map((ce) => {\n                  return (\n                    <tr>\n                      <th scope=\"row\">{ce.id}</th>\n                      <td>{ce.title}</td>\n                      <td>{ce.completed == true ? \"true\" : \"false\"}</td>\n                      <td>\n                        {\" \"}\n                        <button\n                          className=\"btn btn-warning\"\n                          style={{ width: \"90%\", backgroundColor: \"white\" }}\n                          onClick={() => userView(ce.id)}\n                        >\n                          View User\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n        <div>{showData ? <p>Click any view botton</p> : showdata()}</div>{\" \"}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}